import copy, datetime, os, sys, timefrom pydc_client import pydc_clientfrom pymongo import MongoClientfrom xml.dom.minidom import parseimport xml.dom.minidomfrom pprint import pprintimport mimetypesimport build_matriximport recomimport resupported_file_types = ['mkv','mp4', 'avi']client = MongoClient("mongodb://localhost:27017")db = client.reco_bot_2tths = db.tthsuser_list = db.user_listdone_users = db.done_usersflag = Falsedef recommend(text):    nick = re.findall("^<(.*)>",text)    if nick is None or len(nick) == 0 or nick[0] == 'Security':        return    if flag == False:        c.pm_send('bot is loading....')        return    nick = nick[0]    text = unicode(text, errors='ignore')    count = db.done_users.count({'user': nick})    if "+reco users" in text:        if count == 0:            c.pm_send(nick, 'sorry your data is not in the database,try later maybe?')        else:            nick = re.findall("^<(.*)>",text)[0]            c.pm_send(nick,"\n"+"\n".join(recom.similar_users(nick)[1:]))    elif "+reco" in text:        if count ==0:            c.pm_send(nick,'sorry your data is not in the database,try later maybe?')        else:            c.pm_send(nick, "\n"+"\n".join(recom.recommended_files(nick)))config_data = { "mode":True, "name":"reco_reco_reco", "host":"172.17.26.89","nick":"recobot","pass":"banana","desc":"filelist_dede","email":"","sharesize":10995116277760,"localhost":"172.17.30.135"}c = pydc_client().configure(config_data).link({"mainchat":recommend,"debug":[sys.stdout.write,open("debug.txt","w").write,None][2] }).connect("0/1/0");c._config["overwrite"] = Truetime.sleep(3); # Wait for the connection to established and session to be verified.def filelist_analyse(filename,nick):    print "Filelist download complete :", nick, filename[:-4]    DOMTree = xml.dom.minidom.parse(filename[:-4])    for file_ob in (DOMTree.getElementsByTagName('File')):        file_name =  file_ob.attributes['Name'].value        tth =  file_ob.attributes['TTH'].value        size =  file_ob.attributes['Size'].value        if int(size) < 104857600:            continue        for x in supported_file_types:            if  file_name.endswith(x):                f = tths.find({'tth': tth})                user_list.insert({'tth': tth, 'creation_date': datetime.datetime.now(), 'user': unicode(nick, errors='replace') })                if f.count() ==0:                    tths.insert({'tth': tth, 'name': file_name.encode('utf-8')})                break    done_users.insert({'user': unicode(nick, errors='replace')})if __name__=="__main__":    c.mc_send('recobot is ONLINE, building database')    get_file_lists = raw_input("Download Filelists?\n$>")    if get_file_lists:lower() == 'y':        print 'downloading filelists .. this will take some time'        while True:            c._nicklock.acquire()            nicklist = copy.deepcopy(c._nicklist)            c._nicklock.release()            number_of_users = len(nicklist)            print number_of_users            for nick in nicklist:                already_processed = done_users.find({'user': unicode(nick, errors='replace')})                if not nicklist[nick]["operator"] and not nicklist[nick]["bot"] and already_processed.count()==0:                    user_list.remove({'user': unicode(nick, errors='replace')})                    c.download_filelist(nick,filelist_analyse,nick)            break    rebuild_recommendations = raw_input('Press y to rebuild recomendation database')    if rebuild_recommendations.lower() == 'y':        print 'bot is building matrix'        build_matrix.dat_build()    flag = True    c.mc_send('reco bot is online try +reco or +reco users')    c.mc_send("\t".join(supported_file_types) + " are the supported_file_types")    c.cli()